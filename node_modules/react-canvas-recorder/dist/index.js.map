{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["// @ts-nocheck\nimport React from 'react'\n\ninterface CanvasRecorder {\n  start: () => void\n  stop: () => void\n  save: () => Blob\n  createStream: <T extends HTMLCanvasElement>(canvas: T) => void\n  captureMediaStream: <T extends MediaStream>(mediaStream: T) => void\n  recordScreen: () => void\n}\n\n/* eslint-disable */\nconst CanvasRecorder = (): CanvasRecorder => {\n  const start = startRecording\n  const stop = stopRecording\n  const save = download\n  let stream\n  var recordedBlobs = []\n  var supportedType = null\n  var mediaRecorder = null\n\n  const createStream = (canvas) => {\n    stream = canvas.captureStream(150)\n  }\n\n  const captureMediaStream = (mediaStream) => {\n    stream = mediaStream\n  }\n\n  const recordScreen = async () => {\n    stream = await navigator.mediaDevices.getDisplayMedia({\n      video: { mediaSource: 'screen' }\n    })\n  }\n\n  function startRecording() {\n    let types = [\n      'video/webm',\n      'video/webm,codecs=vp9',\n      'video/vp8',\n      'video/webm;codecs=vp8',\n      'video/webm;codecs=daala',\n      'video/webm;codecs=h264',\n      'video/mpeg'\n    ]\n    for (let i in types) {\n      if (MediaRecorder.isTypeSupported(types[i])) {\n        supportedType = types[i]\n        break\n      }\n    }\n    if (supportedType == null) {\n      console.log('No supported type found for MediaRecorder')\n    }\n    let options = {\n      mimeType: supportedType,\n      videoBitsPerSecond: 25000000000 // 2.5Mbps\n    }\n    recordedBlobs = []\n    try {\n      mediaRecorder = new MediaRecorder(stream, options)\n    } catch (e) {\n      console.error('Exception while creating MediaRecorder:', e)\n      alert('MediaRecorder is not supported by this browser.')\n      return\n    }\n    mediaRecorder.onstop = handleStop\n    mediaRecorder.ondataavailable = handleDataAvailable\n    mediaRecorder.start(100) // collect 100ms of data blobs\n  }\n  function handleDataAvailable(event) {\n    if (event.data && event.data.size > 0) {\n      recordedBlobs.push(event.data)\n    }\n  }\n  function handleStop(event) {\n    const superBuffer = new Blob(recordedBlobs, { type: supportedType })\n  }\n\n  function stopRecording() {\n    mediaRecorder.stop()\n  }\n\n  function download(file_name) {\n    return new Blob(recordedBlobs, { type: supportedType })\n  }\n  return {\n    start,\n    stop,\n    save,\n    createStream\n  }\n}\nexport default CanvasRecorder()\n"],"names":["CanvasRecorder","start","startRecording","stop","stopRecording","save","download","stream","recordedBlobs","supportedType","mediaRecorder","createStream","canvas","captureStream","types","i","MediaRecorder","isTypeSupported","console","log","options","mimeType","videoBitsPerSecond","e","error","alert","onstop","handleStop","ondataavailable","handleDataAvailable","event","data","size","push","superBuffer","Blob","type","file_name"],"mappings":"AAaA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB;AACrB,MAAMC,KAAK,GAAGC,cAAd;AACA,MAAMC,IAAI,GAAGC,aAAb;AACA,MAAMC,IAAI,GAAGC,QAAb;AACA,MAAIC,MAAJ;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,aAAa,GAAG,IAApB;AACA,MAAIC,aAAa,GAAG,IAApB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD;AACnBL,IAAAA,MAAM,GAAGK,MAAM,CAACC,aAAP,CAAqB,GAArB,CAAT;AACD,GAFD;;AAcA,WAASX,cAAT;AACE,QAAIY,KAAK,GAAG,CACV,YADU,EAEV,uBAFU,EAGV,WAHU,EAIV,uBAJU,EAKV,yBALU,EAMV,wBANU,EAOV,YAPU,CAAZ;;AASA,SAAK,IAAIC,CAAT,IAAcD,KAAd,EAAqB;AACnB,UAAIE,aAAa,CAACC,eAAd,CAA8BH,KAAK,CAACC,CAAD,CAAnC,CAAJ,EAA6C;AAC3CN,QAAAA,aAAa,GAAGK,KAAK,CAACC,CAAD,CAArB;AACA;AACD;AACF;;AACD,QAAIN,aAAa,IAAI,IAArB,EAA2B;AACzBS,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACD;;AACD,QAAIC,OAAO,GAAG;AACZC,MAAAA,QAAQ,EAAEZ,aADE;AAEZa,MAAAA,kBAAkB,EAAE;AAFR,KAAd;AAIAd,IAAAA,aAAa,GAAG,EAAhB;;AACA,QAAI;AACFE,MAAAA,aAAa,GAAG,IAAIM,aAAJ,CAAkBT,MAAlB,EAA0Ba,OAA1B,CAAhB;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU;AACVL,MAAAA,OAAO,CAACM,KAAR,CAAc,yCAAd,EAAyDD,CAAzD;AACAE,MAAAA,KAAK,CAAC,iDAAD,CAAL;AACA;AACD;;AACDf,IAAAA,aAAa,CAACgB,MAAd,GAAuBC,UAAvB;AACAjB,IAAAA,aAAa,CAACkB,eAAd,GAAgCC,mBAAhC;AACAnB,IAAAA,aAAa,CAACT,KAAd,CAAoB,GAApB;AACD;;AACD,WAAS4B,mBAAT,CAA6BC,KAA7B;AACE,QAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWC,IAAX,GAAkB,CAApC,EAAuC;AACrCxB,MAAAA,aAAa,CAACyB,IAAd,CAAmBH,KAAK,CAACC,IAAzB;AACD;AACF;;AACD,WAASJ,UAAT,CAAoBG,KAApB;AACE,QAAMI,WAAW,GAAG,IAAIC,IAAJ,CAAS3B,aAAT,EAAwB;AAAE4B,MAAAA,IAAI,EAAE3B;AAAR,KAAxB,CAApB;AACD;;AAED,WAASL,aAAT;AACEM,IAAAA,aAAa,CAACP,IAAd;AACD;;AAED,WAASG,QAAT,CAAkB+B,SAAlB;AACE,WAAO,IAAIF,IAAJ,CAAS3B,aAAT,EAAwB;AAAE4B,MAAAA,IAAI,EAAE3B;AAAR,KAAxB,CAAP;AACD;;AACD,SAAO;AACLR,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,IAAI,EAAJA,IAFK;AAGLE,IAAAA,IAAI,EAAJA,IAHK;AAILM,IAAAA,YAAY,EAAZA;AAJK,GAAP;AAMD,CAhFD;;AAiFA,YAAeX,cAAc,EAA7B;;;;"}