export default canvasRecord;
/**
 *
 * @alias module:canvasRecord
 * @param {HTMLCanvasElement} canvas The canvas element
 * @param {import("./types.js").CanvasRecordOptions} [options={}]
 * @returns {Object}
 *
 * The video `MimeType` is defined by `recorderOptions.mimeType` if present or is inferred from the filename extension (mkv) for `"video/x-matroska;codecs=avc1"` and default to `"video/webm"`.
 *
 * @see [MediaRecorder#Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder#Properties}
 *
 * ```js
 * // Currently supported by Chrome
 * MediaRecorder.isTypeSupported("video/x-matroska;codecs=avc1");
 * MediaRecorder.isTypeSupported("video/webm");
 * MediaRecorder.isTypeSupported("video/webm;codecs=vp8");
 * MediaRecorder.isTypeSupported("video/webm;codecs=vp9");
 * MediaRecorder.isTypeSupported("video/webm;codecs=vp8.0");
 * MediaRecorder.isTypeSupported("video/webm;codecs=vp9.0");
 * MediaRecorder.isTypeSupported("video/webm;codecs=vp8,opus");
 * MediaRecorder.isTypeSupported("video/webm;codecs=vp8,pcm");
 * MediaRecorder.isTypeSupported("video/WEBM;codecs=VP8,OPUS");
 * MediaRecorder.isTypeSupported("video/webm;codecs=vp9,opus");
 * MediaRecorder.isTypeSupported("video/webm;codecs=vp8,vp9,opus");
 * ```
 */
declare function canvasRecord(canvas: HTMLCanvasElement, options?: import("./types.js").CanvasRecordOptions): any;
